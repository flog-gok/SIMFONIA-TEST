local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

-- UI Library
local UILibrary = {}

-- Tween info for smooth transitions
local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)

-- Random string generator
local function RandomString(length)
	local charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local result = ""
	for i = 1, length do
		local rand = math.random(1, #charset)
		result = result .. charset:sub(rand, rand)
	end
	return result
end

-- Create main UI window
function UILibrary:CreateWindow(name)
	local ScreenGui = Instance.new("ScreenGui")
	ScreenGui.Name = RandomString(12)
	ScreenGui.ResetOnSpawn = false
	ScreenGui.Parent = CoreGui
	ScreenGui.Enabled = false

	local Window = {
		ScreenGui = ScreenGui,
		Tabs = {},
		ChangelogFrame = nil
	}

	-- Create changelog frame
	local ChangelogFrame = Instance.new("Frame")
	ChangelogFrame.Name = RandomString(10)
	ChangelogFrame.Size = UDim2.new(0, 200, 0, 150)
	ChangelogFrame.Position = UDim2.new(1, -220, 0, 20)
	ChangelogFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	ChangelogFrame.BackgroundTransparency = 0.65
	ChangelogFrame.BorderSizePixel = 0
	ChangelogFrame.Parent = ScreenGui

	local ChangelogCorner = Instance.new("UICorner", ChangelogFrame)
	ChangelogCorner.CornerRadius = UDim.new(0, 8)

	local ChangelogTitle = Instance.new("TextLabel")
	ChangelogTitle.Size = UDim2.new(1, 0, 0, 20)
	ChangelogTitle.BackgroundTransparency = 1
	ChangelogTitle.Text = "Changelog"
	ChangelogTitle.Font = Enum.Font.GothamBold
	ChangelogTitle.TextSize = 14
	ChangelogTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
	ChangelogTitle.TextStrokeTransparency = 0.8
	ChangelogTitle.Parent = ChangelogFrame

	local ChangelogText = Instance.new("TextLabel")
	ChangelogText.Size = UDim2.new(1, -10, 1, -30)
	ChangelogText.Position = UDim2.new(0, 5, 0, 25)
	ChangelogText.BackgroundTransparency = 1
	ChangelogText.Text = "+ Added new menu system\n- Removed old UI\n\\ Fixed bugs\n* Reworked animations"
	ChangelogText.Font = Enum.Font.Gotham
	ChangelogText.TextSize = 10
	ChangelogText.TextColor3 = Color3.fromRGB(255, 255, 255)
	ChangelogText.TextWrapped = true
	ChangelogText.TextYAlignment = Enum.TextYAlignment.Top
	ChangelogText.Parent = ChangelogFrame

	Window.ChangelogFrame = ChangelogFrame

	-- Toggle with Right Shift
	UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
		if gameProcessedEvent then return end
		if input.KeyCode == Enum.KeyCode.RightShift then
			ScreenGui.Enabled = not ScreenGui.Enabled
			local targetTransparency = ScreenGui.Enabled and 0.1 or 1
			for _, tab in pairs(Window.Tabs) do
				local tween = TweenService:Create(tab.Frame, tweenInfo, {BackgroundTransparency = targetTransparency})
				tween:Play()
			end
			local changelogTween = TweenService:Create(ChangelogFrame, tweenInfo, {BackgroundTransparency = ScreenGui.Enabled and 0.65 or 1})
			changelogTween:Play()
		end
	end)

	function Window:CreateTab(name)
		local Tab = {}
		local totalWidth = #self.Tabs * 210 + 200
		local startX = (1 - totalWidth / 1920) / 2

		local Frame = Instance.new("Frame")
		Frame.Name = RandomString(10)
		Frame.Size = UDim2.new(0, 200, 0, 400)
		Frame.Position = UDim2.new(startX + #self.Tabs * (200 + 10) / 1920, 0, 0.5, -200)
		Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
		Frame.BackgroundTransparency = 0.1
		Frame.BorderSizePixel = 0
		Frame.Parent = ScreenGui

		local UICorner = Instance.new("UICorner", Frame)
		UICorner.CornerRadius = UDim.new(0, 8)

		local Title = Instance.new("TextLabel")
		Title.Size = UDim2.new(1, 0, 0, 20)
		Title.BackgroundTransparency = 1
		Title.Text = name
		Title.Font = Enum.Font.GothamBold
		Title.TextSize = 14
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextStrokeTransparency = 0.8
		Title.Parent = Frame

		Tab.Frame = Frame
		Tab.Elements = {}
		Tab.YOffset = 30
		table.insert(self.Tabs, Tab)

		function Tab:CreateDropdown(text, options, callback)
			local Dropdown = {}
			local DropdownFrame = Instance.new("Frame")
			DropdownFrame.Size = UDim2.new(1, -10, 0, 20)
			DropdownFrame.Position = UDim2.new(0, 5, 0, self.YOffset)
			DropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			DropdownFrame.BorderSizePixel = 0
			DropdownFrame.Parent = Frame

			local corner = Instance.new("UICorner", DropdownFrame)
			corner.CornerRadius = UDim.new(0, 4)

			local DropdownButton = Instance.new("TextButton")
			DropdownButton.Size = UDim2.new(1, 0, 1, 0)
			DropdownButton.BackgroundTransparency = 1
			DropdownButton.Text = text
			DropdownButton.Font = Enum.Font.Gotham
			DropdownButton.TextSize = 12
			DropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			DropdownButton.Parent = DropdownFrame

			local StatusLabel = Instance.new("TextLabel")
			StatusLabel.Size = UDim2.new(0, 40, 1, 0)
			StatusLabel.Position = UDim2.new(1, -45, 0, 0)
			StatusLabel.BackgroundTransparency = 1
			StatusLabel.Text = options[1]
			StatusLabel.Font = Enum.Font.Gotham
			StatusLabel.TextSize = 12
			StatusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
			StatusLabel.TextXAlignment = Enum.TextXAlignment.Right
			StatusLabel.Parent = DropdownFrame

			local isOn = false
			local currentOption = 1
			local boundKey = nil

			-- Settings dropdown
			local SettingsFrame = Instance.new("Frame")
			SettingsFrame.Size = UDim2.new(1, 0, 0, 0)
			SettingsFrame.Position = UDim2.new(0, 0, 1, 5)
			SettingsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			SettingsFrame.BackgroundTransparency = 0.1
			SettingsFrame.Visible = false
			SettingsFrame.Parent = DropdownFrame

			local SettingsCorner = Instance.new("UICorner", SettingsFrame)
			SettingsCorner.CornerRadius = UDim.new(0, 4)

			-- Checkbox
			local Checkbox = Instance.new("TextButton")
			Checkbox.Size = UDim2.new(1, -5, 0, 15)
			Checkbox.Position = UDim2.new(0, 2.5, 0, 5)
			Checkbox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			Checkbox.Text = "Auto-Target: Off"
			Checkbox.Font = Enum.Font.Gotham
			Checkbox.TextSize = 10
			Checkbox.TextColor3 = Color3.fromRGB(255, 255, 255)
			Checkbox.Parent = SettingsFrame
			local CheckboxState = false

			local CheckboxCorner = Instance.new("UICorner", Checkbox)
			CheckboxCorner.CornerRadius = UDim.new(0, 3)

			Checkbox.MouseButton1Click:Connect(function()
				CheckboxState = not CheckboxState
				Checkbox.Text = "Auto-Target: " .. (CheckboxState and "On" or "Off")
			end)

			-- Slider
			local SliderFrame = Instance.new("Frame")
			SliderFrame.Size = UDim2.new(1, -5, 0, 15)
			SliderFrame.Position = UDim2.new(0, 2.5, 0, 25)
			SliderFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			SliderFrame.Parent = SettingsFrame

			local SliderCorner = Instance.new("UICorner", SliderFrame)
			SliderCorner.CornerRadius = UDim.new(0, 3)

			local SliderBar = Instance.new("Frame")
			SliderBar.Size = UDim2.new(0.5, 0, 0, 5)
			SliderBar.Position = UDim2.new(0, 0, 0.5, -2.5)
			SliderBar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
			SliderBar.Parent = SliderFrame

			local SliderBarCorner = Instance.new("UICorner", SliderBar)
			SliderBarCorner.CornerRadius = UDim.new(0, 2)

			local SliderLabel = Instance.new("TextLabel")
			SliderLabel.Size = UDim2.new(1, 0, 1, 0)
			SliderLabel.BackgroundTransparency = 1
			SliderLabel.Text = "Range: 10"
			SliderLabel.Font = Enum.Font.Gotham
			SliderLabel.TextSize = 10
			SliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			SliderLabel.Parent = SliderFrame

			local isDragging = false
			SliderFrame.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					isDragging = true
				end
			end)
			SliderFrame.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					isDragging = false
				end
			end)
			UserInputService.InputChanged:Connect(function(input)
				if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
					local mouseX = input.Position.X
					local frameX = SliderFrame.AbsolutePosition.X
					local frameWidth = SliderFrame.AbsoluteSize.X
					local relativeX = math.clamp((mouseX - frameX) / frameWidth, 0, 1)
					SliderBar.Size = UDim2.new(relativeX, 0, 0, 5)
					local value = math.floor(relativeX * 100)
					SliderLabel.Text = "Range: " .. value
				end
			end)

			-- Color Picker
			local ColorPickerFrame = Instance.new("Frame")
			ColorPickerFrame.Size = UDim2.new(1, -5, 0, 15)
			ColorPickerFrame.Position = UDim2.new(0, 2.5, 0, 45)
			ColorPickerFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			ColorPickerFrame.Parent = SettingsFrame

			local ColorPickerCorner = Instance.new("UICorner", ColorPickerFrame)
			ColorPickerCorner.CornerRadius = UDim.new(0, 3)

			local ColorPickerLabel = Instance.new("TextLabel")
			ColorPickerLabel.Size = UDim2.new(1, 0, 1, 0)
			ColorPickerLabel.BackgroundTransparency = 1
			ColorPickerLabel.Text = "Aura Color"
			ColorPickerLabel.Font = Enum.Font.Gotham
			ColorPickerLabel.TextSize = 10
			ColorPickerLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			ColorPickerLabel.Parent = ColorPickerFrame

			local ColorPickerMenu = Instance.new("Frame")
			ColorPickerMenu.Size = UDim2.new(0, 100, 0, 100)
			ColorPickerMenu.Position = UDim2.new(1, 5, 0, 0)
			ColorPickerMenu.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			ColorPickerMenu.BackgroundTransparency = 0.1
			ColorPickerMenu.Visible = false
			ColorPickerMenu.Parent = ColorPickerFrame

			local ColorPickerMenuCorner = Instance.new("UICorner", ColorPickerMenu)
			ColorPickerMenuCorner.CornerRadius = UDim.new(0, 4)

			local ColorPickerGradient = Instance.new("UIGradient")
			ColorPickerGradient.Color = ColorSequence.new{
				ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
				ColorSequenceKeypoint.new(0.2, Color3.fromRGB(255, 255, 0)),
				ColorSequenceKeypoint.new(0.4, Color3.fromRGB(0, 255, 0)),
				ColorSequenceKeypoint.new(0.6, Color3.fromRGB(0, 255, 255)),
				ColorSequenceKeypoint.new(0.8, Color3.fromRGB(0, 0, 255)),
				ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 255))
			}
			ColorPickerGradient.Parent = ColorPickerMenu

			ColorPickerFrame.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					ColorPickerMenu.Visible = not ColorPickerMenu.Visible
				end
			end)

			ColorPickerMenu.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					local mouseX = input.Position.X
					local mouseY = input.Position.Y
					local frameX = ColorPickerMenu.AbsolutePosition.X
					local frameY = ColorPickerMenu.AbsolutePosition.Y
					local frameWidth = ColorPickerMenu.AbsoluteSize.X
					local frameHeight = ColorPickerMenu.AbsoluteSize.Y
					local relativeX = (mouseX - frameX) / frameWidth
					local color = ColorPickerGradient.Color.Keypoints[math.floor(relativeX * #ColorPickerGradient.Color.Keypoints) + 1].Value
					ColorPickerFrame.BackgroundColor3 = color
				end
			end)

			-- Sub-dropdown
			local SubDropdown = Instance.new("Frame")
			SubDropdown.Size = UDim2.new(1, -5, 0, 50)
			SubDropdown.Position = UDim2.new(0, 2.5, 0, 65)
			SubDropdown.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			SubDropdown.BackgroundTransparency = 0.1
			SubDropdown.Visible = false
			SubDropdown.Parent = SettingsFrame

			local SubDropdownCorner = Instance.new("UICorner", SubDropdown)
			SubDropdownCorner.CornerRadius = UDim.new(0, 3)

			local SubOption1 = Instance.new("TextButton")
			SubOption1.Size = UDim2.new(1, -5, 0, 15)
			SubOption1.Position = UDim2.new(0, 2.5, 0, 5)
			SubOption1.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			SubOption1.Text = "Mode: Melee"
			SubOption1.Font = Enum.Font.Gotham
			SubOption1.TextSize = 10
			SubOption1.TextColor3 = Color3.fromRGB(255, 255, 255)
			SubOption1.Parent = SubDropdown

			local SubOption1Corner = Instance.new("UICorner", SubOption1)
			SubOption1Corner.CornerRadius = UDim.new(0, 3)

			SubOption1.MouseButton1Click:Connect(function()
				SubOption1.Text = "Mode: " .. (SubOption1.Text == "Mode: Melee" and "Ranged" or "Melee")
				SubDropdown.Visible = false
			end)

			local SubDropdownButton = Instance.new("TextButton")
			SubDropdownButton.Size = UDim2.new(1, -5, 0, 15)
			SubDropdownButton.Position = UDim2.new(0, 2.5, 0, 65)
			SubDropdownButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			SubDropdownButton.Text = "Mode"
			SubDropdownButton.Font = Enum.Font.Gotham
			SubDropdownButton.TextSize = 10
			SubDropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			SubDropdownButton.Parent = SettingsFrame

			local SubDropdownButtonCorner = Instance.new("UICorner", SubDropdownButton)
			SubDropdownButtonCorner.CornerRadius = UDim.new(0, 3)

			SubDropdownButton.MouseButton1Click:Connect(function()
				SubDropdown.Visible = not SubDropdown.Visible
			end)

			local function updateAppearance()
				local targetColor = isOn and Color3.fromRGB(60, 60, 60) or Color3.fromRGB(40, 40, 40)
				local targetTextColor = isOn and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
				local frameTween = TweenService:Create(DropdownFrame, tweenInfo, {BackgroundColor3 = targetColor})
				local textTween = TweenService:Create(StatusLabel, tweenInfo, {TextColor3 = targetTextColor})
				frameTween:Play()
				textTween:Play()
			end

			DropdownButton.MouseButton1Click:Connect(function()
				currentOption = currentOption % #options + 1
				isOn = currentOption > 1
				StatusLabel.Text = options[currentOption]
				updateAppearance()
				callback(options[currentOption], isOn)
			end)

			DropdownButton.MouseButton2Click:Connect(function()
				SettingsFrame.Visible = not SettingsFrame.Visible
				local targetSize = SettingsFrame.Visible and UDim2.new(1, 0, 0, 120) or UDim2.new(1, 0, 0, 0)
				local tween = TweenService:Create(SettingsFrame, tweenInfo, {Size = targetSize})
				tween:Play()
			end)

			DropdownButton.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton3 then
					local bindingLabel = Instance.new("TextLabel")
					bindingLabel.Size = UDim2.new(1, 0, 0, 20)
					bindingLabel.Position = UDim2.new(0, 0, 1, 5)
					bindingLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
					bindingLabel.Text = "Press a key to bind..."
					bindingLabel.Font = Enum.Font.Gotham
					bindingLabel.TextSize = 10
					bindingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
					bindingLabel.Parent = DropdownFrame

					local connection
					connection = UserInputService.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.Keyboard then
							boundKey = input.KeyCode
							bindingLabel.Text = "Bound to: " .. boundKey.Name
							wait(1)
							bindingLabel:Destroy()
							connection:Disconnect()
						end
					end)
				end
			end)

			UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
				if gameProcessedEvent then return end
				if boundKey and input.KeyCode == boundKey then
					currentOption = currentOption % #options + 1
					isOn = currentOption > 1
					StatusLabel.Text = options[currentOption]
					updateAppearance()
					callback(options[currentOption], isOn)
				end
			end)

			self.YOffset = self.YOffset + 25
			return Dropdown
		end

		return Tab
	end

	return Window
end
